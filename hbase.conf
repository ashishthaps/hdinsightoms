<source>
  type exec
  command curl localhost:16030/jmx?qry=Hadoop:service=HBase,name=RegionServer,sub=Server
  format json
  tag oms.api.metrics_regionserver
  run_interval 1m
</source>

<source>
  type exec
  command curl localhost:16030/jmx?qry=Hadoop:service=HBase,name=RegionServer,sub=Replication
  format json
  tag oms.api.metrics_regionserverreplication
  run_interval 1m
</source>

<source>
  type exec
  command curl localhost:8085/jmx?qry=Hadoop:service=HBase,name=REST
  format json
  tag oms.api.metrics_restserver
  run_interval 1m
</source>

<source>
  type exec
  command curl localhost:8085/jmx?qry=Hadoop:service=HBase,name=JvmMetrics
  format json
  tag oms.api.metrics_restserverjvm
  run_interval 1m
</source>

<source>
  type exec
  command curl localhost:16030/jmx?qry=Hadoop:service=HBase,name=RegionServer,sub=WAL
  format json
  tag oms.api.metrics_regionserverwal
  run_interval 1m
</source>

<source>
  type exec
  command curl localhost:16030/jmx?qry=Hadoop:service=HBase,name=RegionServer,sub=IPC
  format json
  tag oms.api.metrics_regionserveripc
  run_interval 1m
</source>

<source>
  type exec
  command curl localhost:16030/jmx?qry=Hadoop:service=HBase,name=JvmMetrics
  format json
  tag oms.api.metrics_regionserverjvm
  run_interval 1m
</source>

<source>
  type exec
  command curl localhost:16030/jmx?qry=java.lang:type=OperatingSystem
  format json
  tag oms.api.metrics_regionserveros
  run_interval 1m
</source>

<source>
  type tail
  path /var/log/hbase/hbase-hbase-regionserver-*.log
  pos_file /var/opt/microsoft/omsagent/state/regionserverlog.pos
  read_from_head true
  tag oms.api.log_regionserverlog
  format none
</source>

<source>
  type tail
  path /var/log/hbase/hbase-root-rest-*.log
  pos_file /var/opt/microsoft/omsagent/state/restserverlog.pos
  read_from_head true
  tag oms.api.log_restserverlog
  format none
</source>

<source>
  type tail
  path /var/log/hbase/phoenix-hbase-server.log
  pos_file /var/opt/microsoft/omsagent/state/phoenixserverlog.pos
  read_from_head true
  tag oms.api.log_phoenixserverlog
  format none
</source>

<filter oms.api.log_regionserverlog>
  type filter_hdinsight
  clustername hbasemetrics6
  clustertype hbase
</filter>

<filter oms.api.log_restserverlog>
  type filter_hdinsight
  clustername hbasemetrics6
  clustertype hbase
</filter>

<filter oms.api.log_phoenixserverlog>
  type filter_hdinsight
  clustername hbasemetrics6
  clustertype hbase
</filter>

<filter oms.api.metrics_regionserver>
  type filter_flatten
  select record['beans'][0]
</filter>

<filter oms.api.metrics_regionserver>
  type filter_hdinsight
  clustername hbasemetrics6
  clustertype hbase
</filter>

<filter oms.api.metrics_regionserverreplication>
  type filter_flatten
  select record['beans'][0]
</filter>

<filter oms.api.metrics_regionserverreplication>
  type filter_hdinsight
  clustername hbasemetrics6
  clustertype hbase
</filter>

<filter oms.api.metrics_restserver>
  type filter_flatten
  select record['beans'][0]
</filter>

<filter oms.api.metrics_restserver>
  type filter_hdinsight
  clustername hbasemetrics6
  clustertype hbase
</filter>

<filter oms.api.metrics_restserverjvm>
  type filter_flatten
  select record['beans'][0]
</filter>

<filter oms.api.metrics_restserverjvm>
  type filter_hdinsight
  clustername hbasemetrics6
  clustertype hbase
</filter>

<filter oms.api.metrics_regionserverwal>
  type filter_flatten
  select record['beans'][0]
</filter>

<filter oms.api.metrics_regionserverwal>
  type filter_hdinsight
  clustername hbasemetrics6
  clustertype hbase
</filter>


<filter oms.api.metrics_regionserveripc>
  type filter_flatten
  select record['beans'][0]
</filter>

<filter oms.api.metrics_regionserveripc>
  type filter_hdinsight
  clustername hbasemetrics6
  clustertype hbase
</filter>

<filter oms.api.metrics_regionserverjvm>
  type filter_flatten
  select record['beans'][0]
</filter>

<filter oms.api.metrics_regionserverjvm>
  type filter_hdinsight
  clustername hbasemetrics6
  clustertype hbase
</filter>

<filter oms.api.metrics_regionserveros>
  type filter_flatten
  select record['beans'][0].merge({"tag.Hostname" => "wn1-hbasem"})
</filter>

<filter oms.api.metrics_regionserveros>
  type filter_hdinsight
  clustername hbasecluster001
  clustertype hbase
</filter>

<match oms.api.metrics*>
  type out_oms_api
  log_level info

  buffer_chunk_limit 5m
  buffer_type file
  buffer_path /var/opt/microsoft/omsagent/state/out_oms_api*.buffer
  buffer_queue_limit 10
  flush_interval 20s
  retry_limit 10
  retry_wait 5s
  max_retry_wait 5m

  compress true
</match>

<match oms.api.log_regionserverlog>
    type out_oms_api
    log_level info
    num_threads 5
    buffer_chunk_limit 10m
    buffer_type file
    buffer_path /var/opt/microsoft/omsagent/state/out_oms_regionserverlog.*.buffer
    buffer_queue_limit 10
    buffer_queue_full_action drop_oldest_chunk
    flush_interval 20s
    retry_limit 10
    retry_wait 30s
    max_retry_wait 9m
</match>

<match oms.api.log_restserverlog>
    type out_oms_api
    log_level info
    num_threads 5
    buffer_chunk_limit 10m
    buffer_type file
    buffer_path /var/opt/microsoft/omsagent/state/out_oms_restserverlog.*.buffer
    buffer_queue_limit 10
    buffer_queue_full_action drop_oldest_chunk
    flush_interval 20s
    retry_limit 10
    retry_wait 30s
    max_retry_wait 9m
</match>

<match oms.api.log_phoenixserverlog>
    type out_oms_api
    log_level info
    num_threads 5
    buffer_chunk_limit 10m
    buffer_type file
    buffer_path /var/opt/microsoft/omsagent/state/out_oms_phoenixserverlog.*.buffer
    buffer_queue_limit 10
    buffer_queue_full_action drop_oldest_chunk
    flush_interval 20s
    retry_limit 10
    retry_wait 30s
    max_retry_wait 9m
</match>
<source>
  type tail
  path /var/log/hadoop-yarn/yarn/yarn-yarn-resourcemanager*.log
  pos_file /var/opt/microsoft/omsagent/state/yarnresourcemmamanager.pos
  read_from_head true
  tag oms.api.log_yarnresourcemanagerlog
  format none
</source>

<filter oms.api.log_yarnresourcemanagerlog>
  type filter_hdinsight
  clustername hadoop001
  clustertype query
</filter>

<match oms.api.log_yarnresourcemanagerlog>
    type out_oms_api
    log_level info
    num_threads 5
    buffer_chunk_limit 10m
    buffer_type file
    buffer_path /var/opt/microsoft/omsagent/state/out_oms_yarnresourcemanagerlog.*.buffer
    buffer_queue_limit 10
    buffer_queue_full_action drop_oldest_chunk
    flush_interval 20s
    retry_limit 10
    retry_wait 30s
    max_retry_wait 9m
</match>

<source>
  type tail
  path /var/log/hadoop-yarn/yarn/hadoop-mapreduce.jobsummary.log
  pos_file /var/opt/microsoft/omsagent/state/hadoop-mapreduce.jobsummary.pos
  read_from_head true
  tag oms.api.log_hadoopmapreducejobsummarylog
  format none
</source>

<filter oms.api.log_hadoopmapreducejobsummarylog>
  type filter_hdinsight
  clustername hadoop001
  clustertype query
</filter>

<match oms.api.log_hadoopmapreducejobsummarylog>
    type out_oms_api
    log_level info
    num_threads 5
    buffer_chunk_limit 10m
    buffer_type file
    buffer_path /var/opt/microsoft/omsagent/state/out_oms_hadoopmapreducejobsummary.*.buffer
    buffer_queue_limit 10
    buffer_queue_full_action drop_oldest_chunk
    flush_interval 20s
    retry_limit 10
    retry_wait 30s
    max_retry_wait 9m
</match>
<source>
  type tail
  path /var/log/hadoop/hdfs$ cat hadoop-hdfs-datanode*.log
  pos_file /var/opt/microsoft/omsagent/state/yarnresourcemmamanager.pos
  read_from_head true
  tag oms.api.log_hdfsdatanodelog
  format none
</source>

<filter oms.api.log_hdfsdatanodelog>
  type filter_hdinsight
  clustername hadoop001
  clustertype query
</filter>

<match oms.api.log_hdfsdatanodelog>
    type out_oms_api
    log_level info
    num_threads 5
    buffer_chunk_limit 10m
    buffer_type file
    buffer_path /var/opt/microsoft/omsagent/state/out_oms_hadoop-hdfs-datanode.*.buffer
    buffer_queue_limit 10
    buffer_queue_full_action drop_oldest_chunk
    flush_interval 20s
    retry_limit 10
    retry_wait 30s
    max_retry_wait 9m
</match>
# Catch all unprocessed data and output it
#<match **>
#  type stdout
#</match>
